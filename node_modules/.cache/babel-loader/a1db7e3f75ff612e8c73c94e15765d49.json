{"ast":null,"code":"var _jsxFileName = \"/Users/vitorsantos/Galileu/Projeto_Front_End/vs-foodwish-proj2022/src/ReusableComponents/CatalogComp/CatalogPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './catalogPage.css';\nimport ReactPaginate from 'react-paginate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CatalogPage(props) {\n  _s();\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [productsPerPage, setProductsPerPage] = useState(6);\n  const [pageNumberLimit, setPageNumberLimit] = useState(3);\n  const [maxPageLimit, setMaxPageLimit] = useState(3);\n  const [minPageLimit, setMinPageLimit] = useState(1);\n\n  const changePage = event => {\n    setCurrentPage(Number(event.target.id));\n  };\n\n  const previousBtn = () => {\n    setCurrentPage(currentPage);\n  };\n\n  const nextBtn = () => {\n    setCurrentPage(currentPage + 1);\n  };\n\n  const pages = [];\n\n  for (let i = 1; i <= Math.ceil(props.products.length / productsPerPage); ++i) {\n    pages.push(i);\n  }\n\n  const indexOflastProduct = currentPage * productsPerPage;\n  const indexOfFirstProduct = indexOflastProduct - productsPerPage;\n  const currentProducts = props.products.slice(indexOfFirstProduct, indexOflastProduct);\n\n  const renderProducts = product => {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"itemsCatalog\",\n      children: product.map((product, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"isolatedItems\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: product.image,\n            alt: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  };\n\n  const renderPageNumbers = pages.map(number => {\n    if (number < maxPageLimit + 1 && number > minPageLimit) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: currentPage == number ? \"activePage\" : \"disabePage\",\n        id: number,\n        onClick: changePage,\n        children: \".\"\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"itemsContainer\",\n    children: [renderProducts(currentProducts), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"paginateContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        class: \"previousBtn\",\n        onClick: previousBtn,\n        viewBox: \"0 0 24 24\",\n        fill: \"none\",\n        stroke: \"currentColor\",\n        \"stroke-width\": \"2\",\n        \"stroke-linecap\": \"round\",\n        \"stroke-linejoin\": \"round\",\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"12\",\n          cy: \"12\",\n          r: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n          points: \"12 8 8 12 12 16\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: \"16\",\n          y1: \"12\",\n          x2: \"10.5\",\n          y2: \"12\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), renderPageNumbers, /*#__PURE__*/_jsxDEV(\"svg\", {\n        class: \"nextBtn\",\n        onClick: nextBtn,\n        viewBox: \"0 0 24 24\",\n        fill: \"none\",\n        stroke: \"currentColor\",\n        \"stroke-width\": \"2\",\n        \"stroke-linecap\": \"round\",\n        \"stroke-linejoin\": \"round\",\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"12\",\n          cy: \"12\",\n          r: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n          points: \"12 16 16 12 12 8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: \"8\",\n          y1: \"12\",\n          x2: \"13.5\",\n          y2: \"12\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 13\n  }, this);\n}\n\n_s(CatalogPage, \"82+GX7lg3HiXb8b0dnRB0xR3NK8=\");\n\n_c = CatalogPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CatalogPage\");","map":{"version":3,"sources":["/Users/vitorsantos/Galileu/Projeto_Front_End/vs-foodwish-proj2022/src/ReusableComponents/CatalogComp/CatalogPage.jsx"],"names":["React","useState","ReactPaginate","CatalogPage","props","currentPage","setCurrentPage","productsPerPage","setProductsPerPage","pageNumberLimit","setPageNumberLimit","maxPageLimit","setMaxPageLimit","minPageLimit","setMinPageLimit","changePage","event","Number","target","id","previousBtn","nextBtn","pages","i","Math","ceil","products","length","push","indexOflastProduct","indexOfFirstProduct","currentProducts","slice","renderProducts","product","map","index","name","image","renderPageNumbers","number"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,mBAAP;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAEvC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,CAAD,CAA9C;AAEA,QAAM,CAACM,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAAC,CAAD,CAAtD;AAEA,QAAM,CAACQ,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC,CAAD,CAAtD;AAEA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,CAAD,CAAhD;AAEA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,CAAD,CAAhD;;AAEA,QAAMc,UAAU,GAAIC,KAAD,IAAW;AAC1BV,IAAAA,cAAc,CAACW,MAAM,CAACD,KAAK,CAACE,MAAN,CAAaC,EAAd,CAAP,CAAd;AACH,GAFD;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACtBd,IAAAA,cAAc,CAACD,WAAD,CAAd;AACH,GAFD;;AAIA,QAAMgB,OAAO,GAAG,MAAM;AAClBf,IAAAA,cAAc,CAACD,WAAW,GAAG,CAAf,CAAd;AACH,GAFD;;AAIA,QAAMiB,KAAK,GAAG,EAAd;;AAEA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAIC,IAAI,CAACC,IAAL,CAAUrB,KAAK,CAACsB,QAAN,CAAeC,MAAf,GAAwBpB,eAAlC,CAApB,EAAwE,EAAEgB,CAA1E,EAA6E;AACzED,IAAAA,KAAK,CAACM,IAAN,CAAWL,CAAX;AACH;;AAED,QAAMM,kBAAkB,GAAGxB,WAAW,GAAGE,eAAzC;AAEA,QAAMuB,mBAAmB,GAAGD,kBAAkB,GAAGtB,eAAjD;AAEA,QAAMwB,eAAe,GAAG3B,KAAK,CAACsB,QAAN,CAAeM,KAAf,CAAqBF,mBAArB,EAA0CD,kBAA1C,CAAxB;;AAEA,QAAMI,cAAc,GAAGC,OAAO,IAAI;AAC9B,wBACI;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA,gBAEQA,OAAO,CAACC,GAAR,CAAY,CAACD,OAAD,EAAUE,KAAV,KAAoB;AAC5B,4BACI;AACA,UAAA,SAAS,EAAC,eADV;AAAA,kCAII;AAAA,sBAAKF,OAAO,CAACG;AAAb;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAK,YAAA,GAAG,EAAEH,OAAO,CAACI,KAAlB;AAAyB,YAAA,GAAG,EAAEJ,OAAO,CAACG;AAAtC;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA,WAEKD,KAFL;AAAA;AAAA;AAAA;AAAA,gBADJ;AASH,OAVD;AAFR;AAAA;AAAA;AAAA;AAAA,YADJ;AAiBH,GAlBD;;AAoBA,QAAMG,iBAAiB,GAAGjB,KAAK,CAACa,GAAN,CAAUK,MAAM,IAAI;AAC1C,QAAGA,MAAM,GAAG7B,YAAY,GAAG,CAAxB,IAA6B6B,MAAM,GAAG3B,YAAzC,EAAsD;AAClD,0BACQ;AACA,QAAA,SAAS,EAAER,WAAW,IAAImC,MAAf,GAAwB,YAAxB,GAAsC,YADjD;AAGA,QAAA,EAAE,EAAEA,MAHJ;AAIA,QAAA,OAAO,EAAEzB,UAJT;AAAA;AAAA,SAEKyB,MAFL;AAAA;AAAA;AAAA;AAAA,cADR;AAUH;AACJ,GAbyB,CAA1B;AAeA,sBACQ;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,eACKP,cAAc,CAACF,eAAD,CADnB,eAEA;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA,8BACI;AAAK,QAAA,KAAK,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEX,WAAlC;AAAgD,QAAA,OAAO,EAAC,WAAxD;AAAqE,QAAA,IAAI,EAAC,MAA1E;AAAkF,QAAA,MAAM,EAAC,cAAzF;AAAyG,wBAAa,GAAtH;AAA2H,0BAAe,OAA1I;AAAmJ,2BAAgB,OAAnK;AAAA,gCACI;AAAQ,UAAA,EAAE,EAAC,IAAX;AAAgB,UAAA,EAAE,EAAC,IAAnB;AAAwB,UAAA,CAAC,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAU,UAAA,MAAM,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAM,UAAA,EAAE,EAAC,IAAT;AAAc,UAAA,EAAE,EAAC,IAAjB;AAAsB,UAAA,EAAE,EAAC,MAAzB;AAAgC,UAAA,EAAE,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAMKmB,iBANL,eAOI;AAAK,QAAA,KAAK,EAAC,SAAX;AAAqB,QAAA,OAAO,EAAElB,OAA9B;AAAwC,QAAA,OAAO,EAAC,WAAhD;AAA6D,QAAA,IAAI,EAAC,MAAlE;AAA0E,QAAA,MAAM,EAAC,cAAjF;AAAiG,wBAAa,GAA9G;AAAmH,0BAAe,OAAlI;AAA2I,2BAAgB,OAA3J;AAAA,gCACI;AAAQ,UAAA,EAAE,EAAC,IAAX;AAAgB,UAAA,EAAE,EAAC,IAAnB;AAAwB,UAAA,CAAC,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAU,UAAA,MAAM,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAM,UAAA,EAAE,EAAC,GAAT;AAAa,UAAA,EAAE,EAAC,IAAhB;AAAqB,UAAA,EAAE,EAAC,MAAxB;AAA+B,UAAA,EAAE,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AAkBH;;GAzFuBlB,W;;KAAAA,W","sourcesContent":["import React, { useState } from 'react'\nimport './catalogPage.css'\nimport ReactPaginate from 'react-paginate'\n\nexport default function CatalogPage(props) {\n\n    const [currentPage, setCurrentPage] = useState(1)\n\n    const [productsPerPage, setProductsPerPage] = useState(6)\n\n    const [pageNumberLimit, setPageNumberLimit] = useState(3)\n\n    const [maxPageLimit, setMaxPageLimit] = useState(3)\n\n    const [minPageLimit, setMinPageLimit] = useState(1)\n\n    const changePage = (event) => {\n        setCurrentPage(Number(event.target.id))\n    }\n\n    const previousBtn = () => {\n        setCurrentPage(currentPage)\n    }\n\n    const nextBtn = () => {\n        setCurrentPage(currentPage + 1)\n    }\n\n    const pages = []\n\n    for(let i = 1; i <= Math.ceil(props.products.length / productsPerPage); ++i) {\n        pages.push(i)\n    }\n\n    const indexOflastProduct = currentPage * productsPerPage \n\n    const indexOfFirstProduct = indexOflastProduct - productsPerPage\n\n    const currentProducts = props.products.slice(indexOfFirstProduct, indexOflastProduct)\n\n    const renderProducts = product => {\n        return(\n            <ul className=\"itemsCatalog\">\n                {\n                    product.map((product, index) => {\n                        return (\n                            <li \n                            className=\"isolatedItems\"\n                            key={index}\n                            >\n                                <h2>{product.name}</h2>\n                                <img src={product.image} alt={product.name}/>\n                            </li>\n                        )\n                    } )\n                }  \n            </ul>\n        )\n    }\n\n    const renderPageNumbers = pages.map(number => {\n        if(number < maxPageLimit + 1 && number > minPageLimit){\n            return (\n                    <li\n                    className={currentPage == number ? \"activePage\": \"disabePage\"}\n                    key={number} \n                    id={number}\n                    onClick={changePage}\n                    >\n                    .\n                    </li>\n                )\n        }\n    })\n   \n    return (\n            <div className=\"itemsContainer\">\n                {renderProducts(currentProducts)}\n            <ul className=\"paginateContainer\">\n                <svg class=\"previousBtn\" onClick={previousBtn}  viewBox=\"0 0 24 24\"  fill=\"none\"  stroke=\"currentColor\"  stroke-width=\"2\"  stroke-linecap=\"round\"  stroke-linejoin=\"round\">  \n                    <circle cx=\"12\" cy=\"12\" r=\"10\" />  \n                    <polyline points=\"12 8 8 12 12 16\" />  \n                    <line x1=\"16\" y1=\"12\" x2=\"10.5\" y2=\"12\" />\n                </svg>\n                {renderPageNumbers}\n                <svg class=\"nextBtn\" onClick={nextBtn}  viewBox=\"0 0 24 24\"  fill=\"none\"  stroke=\"currentColor\"  stroke-width=\"2\"  stroke-linecap=\"round\"  stroke-linejoin=\"round\">  \n                    <circle cx=\"12\" cy=\"12\" r=\"10\" />  \n                    <polyline points=\"12 16 16 12 12 8\" />  \n                    <line x1=\"8\" y1=\"12\" x2=\"13.5\" y2=\"12\" />\n                </svg>\n            </ul>\n            </div>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}