{"ast":null,"code":"var _jsxFileName = \"/Users/vitorsantos/Galileu/Projeto_Front_End/vs-foodwish-proj2022/src/ReusableComponents/CatalogComp/CatalogPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './catalogPage.css';\nimport Modal from '../modalComp/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CatalogPage(props) {\n  _s();\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [product, setProduct] = useState([]);\n  const selectedProduct = product;\n  const productsPerPage = 6;\n  const maxPageLimit = 3;\n  const minPageLimit = 1;\n  const [modalFirstState, setModaFirstlState] = useState(\"modalContainer1\");\n  const [modalSecondState] = useState(\"modalContainer\");\n\n  const openModal = () => {\n    setModaFirstlState(modalSecondState);\n  };\n\n  const changePage = event => {\n    // identifica a página em que o utilizador clickou\n    setCurrentPage(event.target.id);\n  };\n\n  const previousBtn = () => {\n    if (currentPage - 1 < minPageLimit) {\n      setCurrentPage(minPageLimit);\n    } else {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n\n  const nextBtn = () => {\n    if (currentPage + 1 > maxPageLimit) {\n      setCurrentPage(minPageLimit);\n    } else {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n\n  const pages = [];\n\n  for (let i = 1; i <= Math.ceil(props.products.length / productsPerPage); ++i) {\n    pages.push(i);\n  }\n\n  const indexlastProduct = currentPage * productsPerPage;\n  const indexFirstProduct = indexlastProduct - productsPerPage;\n  const currentProducts = props.products.slice(indexFirstProduct, indexlastProduct);\n\n  const renderProducts = product => {\n    // renderiza todos os cards dos produtos na view\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"itemsCatalog\",\n      children: product.map((product, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"isolatedItems\",\n          onClick: openModal,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: product.image,\n            alt: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  };\n\n  const renderPageNumbers = pages.map(number => {\n    // renderiza o layout de mudança de página e suas animações\n    if (number < maxPageLimit + 1 && number >= minPageLimit) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: currentPage == number ? \"activePage\" : \"disabePage\",\n        id: number,\n        onClick: changePage,\n        children: \".\"\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this);\n    } else {\n      return null;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"itemsContainer\",\n    children: [renderProducts(currentProducts), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"paginateContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        class: \"previousBtn\",\n        onClick: previousBtn,\n        viewBox: \"0 0 24 24\",\n        fill: \"none\",\n        stroke: \"currentColor\",\n        \"stroke-width\": \"2\",\n        \"stroke-linecap\": \"round\",\n        \"stroke-linejoin\": \"round\",\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"12\",\n          cy: \"12\",\n          r: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n          points: \"12 8 8 12 12 16\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: \"16\",\n          y1: \"12\",\n          x2: \"10.5\",\n          y2: \"12\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), renderPageNumbers, /*#__PURE__*/_jsxDEV(\"svg\", {\n        class: \"nextBtn\",\n        onClick: nextBtn,\n        viewBox: \"0 0 24 24\",\n        fill: \"none\",\n        stroke: \"currentColor\",\n        \"stroke-width\": \"2\",\n        \"stroke-linecap\": \"round\",\n        \"stroke-linejoin\": \"round\",\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"12\",\n          cy: \"12\",\n          r: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n          points: \"12 16 16 12 12 8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: \"8\",\n          y1: \"12\",\n          x2: \"13.5\",\n          y2: \"12\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), currentProducts.map(product => /*#__PURE__*/_jsxDEV(Modal, {\n      id: product.id,\n      name: product.name,\n      image: product.image,\n      meal: product.meal,\n      description: product.description,\n      extras: product.extras,\n      price: product.price,\n      stock: product.stock,\n      hide: modalFirstState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 13\n  }, this);\n}\n\n_s(CatalogPage, \"s5mjFxuKTwyX3qcm9zJ/qaGLsjc=\");\n\n_c = CatalogPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CatalogPage\");","map":{"version":3,"sources":["/Users/vitorsantos/Galileu/Projeto_Front_End/vs-foodwish-proj2022/src/ReusableComponents/CatalogComp/CatalogPage.jsx"],"names":["React","useState","Modal","CatalogPage","props","currentPage","setCurrentPage","product","setProduct","selectedProduct","productsPerPage","maxPageLimit","minPageLimit","modalFirstState","setModaFirstlState","modalSecondState","openModal","changePage","event","target","id","previousBtn","nextBtn","pages","i","Math","ceil","products","length","push","indexlastProduct","indexFirstProduct","currentProducts","slice","renderProducts","map","index","name","image","renderPageNumbers","number","meal","description","extras","price","stock"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport './catalogPage.css'\nimport Modal from '../modalComp/Modal'\n\nexport default function CatalogPage(props) {\n\n    const [currentPage, setCurrentPage] = useState(1)\n\n    const [product, setProduct] = useState([])\n\n    const selectedProduct = (product)\n\n    const productsPerPage = 6\n\n    const maxPageLimit = 3\n\n    const minPageLimit = 1\n\n    const [modalFirstState, setModaFirstlState] = useState(\"modalContainer1\") \n\n    const [modalSecondState] = useState(\"modalContainer\")\n\n    const openModal = () => {\n        setModaFirstlState(modalSecondState)\n    }\n\n    const changePage = (event) => { // identifica a página em que o utilizador clickou\n        setCurrentPage(event.target.id)\n    } \n\n    const previousBtn = () => {\n        if(currentPage - 1 <  minPageLimit){\n            setCurrentPage(minPageLimit)\n        } else {\n            setCurrentPage(currentPage - 1)\n        }\n    }\n\n    const nextBtn = () => {\n        if(currentPage + 1 > maxPageLimit){\n            setCurrentPage(minPageLimit)\n        } else {\n            setCurrentPage(currentPage + 1)\n        }\n    }\n\n    const pages = []\n\n    for(let i = 1; i <= Math.ceil(props.products.length / productsPerPage); ++i) {\n        pages.push(i)\n    }\n\n    const indexlastProduct = currentPage * productsPerPage \n\n    const indexFirstProduct = indexlastProduct - productsPerPage\n\n    const currentProducts = props.products.slice(indexFirstProduct, indexlastProduct)\n\n    const renderProducts = product => { // renderiza todos os cards dos produtos na view\n        return(\n            <ul className=\"itemsCatalog\">\n                {\n                    product.map((product, index) => {\n                        return (\n                            <li \n                            className=\"isolatedItems\"\n                            key={index}\n                            onClick={openModal}\n                            >\n                                <h2>{product.name}</h2>\n                                <img src={product.image} alt={product.name}/>\n                            </li>\n                        )\n                    } )\n                }  \n            </ul>\n        )\n    }\n\n    const renderPageNumbers = pages.map(number => { // renderiza o layout de mudança de página e suas animações\n        if(number < maxPageLimit + 1 && number >= minPageLimit){\n            return (\n                <li\n                className={currentPage == number ? \"activePage\": \"disabePage\"}\n                key={number} \n                id={number}\n                onClick={changePage}\n                >\n                .\n                </li>\n            )\n        } else {\n            return null\n        }\n    })\n   \n    return (\n            <div className=\"itemsContainer\">\n                {renderProducts(currentProducts)}\n            <ul className=\"paginateContainer\">\n                <svg class=\"previousBtn\" onClick={previousBtn}  viewBox=\"0 0 24 24\"  fill=\"none\"  stroke=\"currentColor\"  stroke-width=\"2\"  stroke-linecap=\"round\"  stroke-linejoin=\"round\">  \n                    <circle cx=\"12\" cy=\"12\" r=\"10\" />  \n                    <polyline points=\"12 8 8 12 12 16\" />  \n                    <line x1=\"16\" y1=\"12\" x2=\"10.5\" y2=\"12\" />\n                </svg>\n                {renderPageNumbers}\n                <svg class=\"nextBtn\" onClick={nextBtn}  viewBox=\"0 0 24 24\"  fill=\"none\"  stroke=\"currentColor\"  stroke-width=\"2\"  stroke-linecap=\"round\"  stroke-linejoin=\"round\">  \n                    <circle cx=\"12\" cy=\"12\" r=\"10\" />  \n                    <polyline points=\"12 16 16 12 12 8\" />  \n                    <line x1=\"8\" y1=\"12\" x2=\"13.5\" y2=\"12\" />\n                </svg>\n            </ul>\n                 {\n                currentProducts.map(product => \n                    <Modal \n                        id={product.id}\n                        name={product.name}\n                        image={product.image}\n                        meal={product.meal}\n                        description={product.description}\n                        extras={product.extras}\n                        price={product.price}\n                        stock={product.stock}\n                        hide={modalFirstState}\n                        \n                    />\n                ) \n            }\n            </div>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}