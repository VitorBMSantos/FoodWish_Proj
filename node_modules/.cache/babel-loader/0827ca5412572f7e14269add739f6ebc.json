{"ast":null,"code":"var _jsxFileName = \"/Users/vitorsantos/Galileu/Projeto_Front_End/vs-foodwish-proj2022/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport \"@material-tailwind/react/tailwind.css\";\nimport HomePage from './homepage/HomePage';\nimport CheckOutPage from './checkoutpage/CheckOutPage';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\"; //Próximo projeto usar useContext para passagem de props!!!!!!!!!\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App(props) {\n  _s();\n\n  const [products, setProducts] = useState([]); // products contém todos os produtos recebidos pela API\n\n  const [filterProduct, setfilterProduct] = useState([]);\n  let [initialValue, setInitialValue] = useState(0);\n  const [isChecked, setIsChecked] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [modalFirstState, setModaFirstlState] = useState(\"modalContainer1\");\n  const [modalSecondState] = useState(\"modalContainer\");\n  const productsPerPage = 6;\n  const maxPageLimit = 3;\n  const minPageLimit = 1;\n  const [quantity, setQuantity] = useState(1);\n\n  const changePage = page => {\n    // identifica a página em que o utilizador clicou\n    setCurrentPage(page.target.id);\n  };\n\n  const previousBtn = () => {\n    if (currentPage - 1 < minPageLimit) {\n      setCurrentPage(minPageLimit);\n    } else {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n\n  const nextBtn = () => {\n    if (currentPage + 1 > maxPageLimit) {\n      setCurrentPage(minPageLimit);\n    } else {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n\n  const pages = [];\n\n  for (let i = 1; i <= Math.ceil(products.length / productsPerPage); ++i) {\n    pages.push(i);\n  }\n\n  const indexlastProduct = currentPage * productsPerPage;\n  const indexFirstProduct = indexlastProduct - productsPerPage;\n  const currentMeals = products.slice(indexFirstProduct, indexlastProduct);\n  const [productId, setProductId] = useState(1);\n  const product = currentMeals.filter(product => product.id == productId);\n\n  const openProduct = product => {\n    setModaFirstlState(modalSecondState);\n    setProductId(product.id);\n  };\n\n  const closeProduct = () => {\n    setModaFirstlState(\"modalContainer1\");\n  };\n\n  const searchProduct = imput => {\n    let filterProduct1 = products.filter(foodItem => foodItem.name.toLowerCase().includes(imput.target.value.toLowerCase()));\n    setCurrentPage(1);\n    setFilterProduct(filterProduct1);\n  };\n\n  const renderProducts = product => {\n    //renderiza todos os cards dos produtos na view\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"itemsCatalog\",\n      children: product.map((product, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"isolatedItems\",\n          id: product.id,\n          onClick: () => openProduct(product),\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: product.image,\n            alt: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this);\n  };\n\n  const renderPageNumbers = pages.map(number => {\n    // renderiza o layout de mudança de página e suas animações\n    if (number < maxPageLimit + 1 && number >= minPageLimit) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: currentPage == number ? \"activePage\" : \"disabePage\",\n        id: number,\n        onClick: changePage,\n        children: \".\"\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this);\n    } else {\n      return null;\n    }\n  });\n  let selectedExtra = [];\n\n  const checkBoxOnChange = () => {\n    setIsChecked(!isChecked);\n  };\n\n  const getExtras = (items, event) => {\n    if (selectedExtra.includes(items) && event.target.checked) {\n      selectedExtra.splice(items, 1);\n    } else {\n      selectedExtra.push(items);\n    }\n  };\n\n  const [productInfo, setProductInfo] = useState([]);\n\n  const selectedProduct = product => {\n    product.map(product => {\n      setProductInfo([...productInfo, {\n        id: `${product.id}${initialValue}`,\n        name: product.name,\n        image: product.image,\n        meal: product.meal,\n        extras: selectedExtra,\n        quantity: 1,\n        price: product.price\n      }]);\n    });\n\n    if (initialValue == 0) {\n      setInitialValue(productInfo.length + 1);\n    } else if (initialValue == initialValue) {\n      setInitialValue(productInfo.length + 1);\n    }\n  };\n\n  const removeProductFromCheckOut = item => {\n    let itemId = item.target.id;\n    setProductInfo(productInfo.filter(product => product.id !== itemId));\n    setInitialValue(productInfo.length - 1);\n  };\n\n  const increaseQuantity = product => {\n    return product.quantity = 2;\n  };\n\n  useEffect(() => {\n    fetch(\"https://61e59d49c14c7a0017124d7d.mockapi.io/api/wishCatalog\").then(resp => resp.json()).then(data => {\n      setProducts(data);\n      setfilterProduct(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(HomePage, {\n            initialValue: initialValue,\n            products: products,\n            checked: isChecked,\n            checkBoxOnChange: checkBoxOnChange,\n            getExtras: getExtras,\n            selectedExtra: selectedExtra,\n            modalFirstState: modalFirstState,\n            previousBtn: previousBtn,\n            nextBtn: nextBtn,\n            closeProduct: closeProduct,\n            renderProducts: renderProducts(currentMeals),\n            renderPageNumbers: renderPageNumbers,\n            product: product,\n            productInfo: productInfo,\n            selectedProducts: () => selectedProduct(product),\n            removeProductFromCheckOut: e => removeProductFromCheckOut(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/CheckOutPage\",\n          element: /*#__PURE__*/_jsxDEV(CheckOutPage, {\n            productInfo: productInfo,\n            removeProductFromCheckOut: e => removeProductFromCheckOut(e),\n            quantity: quantity,\n            increaseQuantity: increaseQuantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"F1zhg6xZYLkWmir7f7+NEL7Ef78=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/vitorsantos/Galileu/Projeto_Front_End/vs-foodwish-proj2022/src/App.js"],"names":["useEffect","useState","HomePage","CheckOutPage","BrowserRouter","Routes","Route","App","props","products","setProducts","filterProduct","setfilterProduct","initialValue","setInitialValue","isChecked","setIsChecked","currentPage","setCurrentPage","modalFirstState","setModaFirstlState","modalSecondState","productsPerPage","maxPageLimit","minPageLimit","quantity","setQuantity","changePage","page","target","id","previousBtn","nextBtn","pages","i","Math","ceil","length","push","indexlastProduct","indexFirstProduct","currentMeals","slice","productId","setProductId","product","filter","openProduct","closeProduct","searchProduct","imput","filterProduct1","foodItem","name","toLowerCase","includes","value","setFilterProduct","renderProducts","map","index","image","renderPageNumbers","number","selectedExtra","checkBoxOnChange","getExtras","items","event","checked","splice","productInfo","setProductInfo","selectedProduct","meal","extras","price","removeProductFromCheckOut","item","itemId","increaseQuantity","fetch","then","resp","json","data","e"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\nimport \"@material-tailwind/react/tailwind.css\";\nimport HomePage from './homepage/HomePage'\nimport CheckOutPage from './checkoutpage/CheckOutPage'\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\"\n\n//Próximo projeto usar useContext para passagem de props!!!!!!!!!\n\nexport default function App(props) {\n  \n  const [products, setProducts] = useState([]) // products contém todos os produtos recebidos pela API\n\n  const [filterProduct, setfilterProduct] = useState([])\n\n  let [initialValue, setInitialValue] = useState(0)\n\n  const [isChecked, setIsChecked] = useState(false)\n\n  const [currentPage, setCurrentPage] = useState(1)\n\n  const [modalFirstState, setModaFirstlState] = useState(\"modalContainer1\") \n\n  const [modalSecondState] = useState(\"modalContainer\")\n\n  const productsPerPage = 6\n\n  const maxPageLimit = 3\n\n  const minPageLimit = 1\n\n  const [quantity, setQuantity] = useState(1)\n\n  const changePage = (page) => { // identifica a página em que o utilizador clicou\n        setCurrentPage(page.target.id)\n    } \n\n  const previousBtn = () => {\n        if(currentPage - 1 <  minPageLimit){\n            setCurrentPage(minPageLimit)\n        } else {\n            setCurrentPage(currentPage - 1)\n        }\n    }\n\n  const nextBtn = () => {\n        if(currentPage + 1 > maxPageLimit){\n            setCurrentPage(minPageLimit)\n        } else {\n            setCurrentPage(currentPage + 1)\n        }\n    }\n\n  const pages = []\n\n    for(let i = 1; i <= Math.ceil(products.length / productsPerPage); ++i) {\n        pages.push(i)\n    }\n\n  const indexlastProduct = currentPage * productsPerPage \n\n  const indexFirstProduct = indexlastProduct - productsPerPage\n\n  const currentMeals = products.slice(indexFirstProduct, indexlastProduct)\n\n  const [productId, setProductId] = useState(1)\n\n  const product = currentMeals.filter((product) => product.id == productId)\n\n  const openProduct = (product) => {\n        setModaFirstlState(modalSecondState)\n        setProductId(product.id)\n  }\n\n  const closeProduct = () => {\n    setModaFirstlState(\"modalContainer1\")\n  }\n\n  const searchProduct =(imput)=>{\n    let filterProduct1 = products.filter(foodItem => foodItem.name.toLowerCase().includes(imput.target.value.toLowerCase()))\n    setCurrentPage(1)\n    setFilterProduct(filterProduct1) \n}\n\n  const renderProducts = (product) => { //renderiza todos os cards dos produtos na view\n    return(\n        <ul className=\"itemsCatalog\">\n                {\n                    product.map((product, index) => {\n                        return (\n                            <li \n                            className=\"isolatedItems\"\n                            key={index}\n                            id={product.id} \n                            onClick={() => openProduct(product)}\n                            >\n                                <h2>{product.name}</h2>\n                                <img src={product.image} alt={product.name}/>\n                            </li>\n                        )\n                    } )\n                }  \n            </ul>\n        )\n    }\n\n    const renderPageNumbers = pages.map(number => { // renderiza o layout de mudança de página e suas animações\n        if(number < maxPageLimit + 1 && number >= minPageLimit){\n            return (\n                <li\n                className={currentPage == number ? \"activePage\": \"disabePage\"}\n                key={number} \n                id={number}\n                onClick={changePage}\n                >\n                .\n                </li>\n            )\n        } else {\n            return null\n        }\n    })\n  \n  let selectedExtra = []\n\n  const checkBoxOnChange = () => {\n   setIsChecked(!isChecked)\n}\n\n  const getExtras = (items, event) => {\n    if(selectedExtra.includes(items) && (event.target.checked)){\n      selectedExtra.splice(items, 1)\n    } else {\n       selectedExtra.push(items)\n    }\n  }\n\n  const [productInfo, setProductInfo] = useState([])\n\n\n  const selectedProduct = (product) => {\n      product.map(product => {\n         setProductInfo(\n           [...productInfo, {\n            id: `${product.id}${initialValue}`,\n            name: product.name,\n            image: product.image,\n            meal: product.meal,\n            extras: selectedExtra,\n            quantity: 1,\n            price: product.price\n            }\n          ]\n         )\n      })\n\n      if(initialValue == 0) {\n        setInitialValue(productInfo.length + 1)\n      } else if (initialValue == initialValue){\n        setInitialValue(productInfo.length + 1)\n      }\n  }\n\n  const removeProductFromCheckOut = (item) => {\n   let itemId = item.target.id\n    setProductInfo(productInfo.filter(product => product.id !== itemId))\n    setInitialValue(productInfo.length - 1)\n  }\n\n  const increaseQuantity = (product) => {\n    return product.quantity = 2\n  }\n\n  useEffect(() => { \n        fetch(\"https://61e59d49c14c7a0017124d7d.mockapi.io/api/wishCatalog\")\n        .then((resp) => resp.json())\n        .then((data) => {\n          setProducts(data)\n          setfilterProduct(data)\n        })        \n    }, []) \n    \n  return (\n    <BrowserRouter>\n      <Routes>\n          <>\n            <Route path=\"/\" element= {\n                <HomePage\n                  initialValue={initialValue}\n                  products={products}\n                  checked={isChecked}\n                  checkBoxOnChange={checkBoxOnChange}\n                  getExtras={getExtras}\n                  selectedExtra={selectedExtra}\n                  modalFirstState={modalFirstState}\n                  previousBtn={previousBtn}\n                  nextBtn={nextBtn}\n                  closeProduct={closeProduct}\n                  renderProducts={renderProducts(currentMeals)}\n                  renderPageNumbers={renderPageNumbers}\n                  product={product}\n                  productInfo={productInfo}\n                  selectedProducts={() => selectedProduct(product)}\n                  removeProductFromCheckOut={(e) => removeProductFromCheckOut(e)}            \n                />\n              }\n            />\n            <Route path=\"/CheckOutPage\" element={\n                <CheckOutPage\n                  productInfo={productInfo}\n                  removeProductFromCheckOut={(e) => removeProductFromCheckOut(e)}\n                  quantity={quantity}\n                  increaseQuantity={increaseQuantity}\n                />\n              } \n            />\n          </>\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}