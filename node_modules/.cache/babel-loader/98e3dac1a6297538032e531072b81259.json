{"ast":null,"code":"var _jsxFileName = \"/Users/vitorsantos/Galileu/Projeto_Front_End/vs-foodwish-proj2022/src/ReusableComponents/CatalogComp/CatalogPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './catalogPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CatalogPage(props) {\n  _s();\n\n  console.log(props.currentPage);\n  const maxPageLimit = 3;\n  const minPageLimit = 1;\n  const [currentPage, setCurrentPage] = useState(props.currentPage);\n\n  const previousBtn = () => {\n    if (currentPage - 1 < minPageLimit) {\n      setCurrentPage(minPageLimit);\n    } else {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n\n  const nextBtn = () => {\n    if (currentPage + 1 > maxPageLimit) {\n      setCurrentPage(minPageLimit);\n    } else {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n\n  const pages = [];\n\n  for (let i = 1; i <= Math.ceil(props.products.length / props.productsPerPage); ++i) {\n    pages.push(i);\n  }\n\n  const renderProducts = product => {\n    // renderiza todos os cards dos produtos na view\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"itemsCatalog\",\n      children: product.map((product, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"isolatedItems\",\n          onClick: props.openCard,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: product.image,\n            alt: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  };\n\n  const renderPageNumbers = pages.map(number => {\n    // renderiza o layout de mudança de página e suas animações\n    if (number < maxPageLimit + 1 && number >= minPageLimit) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: currentPage == number ? \"activePage\" : \"disabePage\",\n        id: number,\n        onClick: props.changePage,\n        children: \".\"\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this);\n    } else {\n      return null;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"itemsContainer\",\n    children: [renderProducts(props.currentProducts), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"paginateContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        class: \"previousBtn\",\n        onClick: previousBtn,\n        viewBox: \"0 0 24 24\",\n        fill: \"none\",\n        stroke: \"currentColor\",\n        \"stroke-width\": \"2\",\n        \"stroke-linecap\": \"round\",\n        \"stroke-linejoin\": \"round\",\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"12\",\n          cy: \"12\",\n          r: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n          points: \"12 8 8 12 12 16\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: \"16\",\n          y1: \"12\",\n          x2: \"10.5\",\n          y2: \"12\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), renderPageNumbers, /*#__PURE__*/_jsxDEV(\"svg\", {\n        class: \"nextBtn\",\n        onClick: nextBtn,\n        viewBox: \"0 0 24 24\",\n        fill: \"none\",\n        stroke: \"currentColor\",\n        \"stroke-width\": \"2\",\n        \"stroke-linecap\": \"round\",\n        \"stroke-linejoin\": \"round\",\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"12\",\n          cy: \"12\",\n          r: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n          points: \"12 16 16 12 12 8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: \"8\",\n          y1: \"12\",\n          x2: \"13.5\",\n          y2: \"12\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 13\n  }, this);\n}\n\n_s(CatalogPage, \"ixEeK9RoAm9Zq1E7E1Y/iGhgHx4=\");\n\n_c = CatalogPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CatalogPage\");","map":{"version":3,"sources":["/Users/vitorsantos/Galileu/Projeto_Front_End/vs-foodwish-proj2022/src/ReusableComponents/CatalogComp/CatalogPage.jsx"],"names":["React","useState","CatalogPage","props","console","log","currentPage","maxPageLimit","minPageLimit","setCurrentPage","previousBtn","nextBtn","pages","i","Math","ceil","products","length","productsPerPage","push","renderProducts","product","map","index","openCard","name","image","renderPageNumbers","number","changePage","currentProducts"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,mBAAP;;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAEvCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,WAAlB;AAEA,QAAMC,YAAY,GAAG,CAArB;AAEA,QAAMC,YAAY,GAAG,CAArB;AAEA,QAAM,CAACF,WAAD,EAAcG,cAAd,IAAgCR,QAAQ,CAACE,KAAK,CAACG,WAAP,CAA9C;;AAEA,QAAMI,WAAW,GAAG,MAAM;AACtB,QAAGJ,WAAW,GAAG,CAAd,GAAmBE,YAAtB,EAAmC;AAC/BC,MAAAA,cAAc,CAACD,YAAD,CAAd;AACH,KAFD,MAEO;AACHC,MAAAA,cAAc,CAACH,WAAW,GAAG,CAAf,CAAd;AACH;AACJ,GAND;;AAQA,QAAMK,OAAO,GAAG,MAAM;AAClB,QAAGL,WAAW,GAAG,CAAd,GAAkBC,YAArB,EAAkC;AAC9BE,MAAAA,cAAc,CAACD,YAAD,CAAd;AACH,KAFD,MAEO;AACHC,MAAAA,cAAc,CAACH,WAAW,GAAG,CAAf,CAAd;AACH;AACJ,GAND;;AAQA,QAAMM,KAAK,GAAG,EAAd;;AAEA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAIC,IAAI,CAACC,IAAL,CAAUZ,KAAK,CAACa,QAAN,CAAeC,MAAf,GAAwBd,KAAK,CAACe,eAAxC,CAApB,EAA8E,EAAEL,CAAhF,EAAmF;AAC/ED,IAAAA,KAAK,CAACO,IAAN,CAAWN,CAAX;AACH;;AAED,QAAMO,cAAc,GAAGC,OAAO,IAAI;AAAE;AAChC,wBACI;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA,gBAEQA,OAAO,CAACC,GAAR,CAAY,CAACD,OAAD,EAAUE,KAAV,KAAoB;AAC5B,4BACI;AACA,UAAA,SAAS,EAAC,eADV;AAGA,UAAA,OAAO,EAAEpB,KAAK,CAACqB,QAHf;AAAA,kCAKI;AAAA,sBAAKH,OAAO,CAACI;AAAb;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI;AAAK,YAAA,GAAG,EAAEJ,OAAO,CAACK,KAAlB;AAAyB,YAAA,GAAG,EAAEL,OAAO,CAACI;AAAtC;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA,WAEKF,KAFL;AAAA;AAAA;AAAA;AAAA,gBADJ;AAUH,OAXD;AAFR;AAAA;AAAA;AAAA;AAAA,YADJ;AAkBH,GAnBD;;AAqBA,QAAMI,iBAAiB,GAAGf,KAAK,CAACU,GAAN,CAAUM,MAAM,IAAI;AAAE;AAC5C,QAAGA,MAAM,GAAGrB,YAAY,GAAG,CAAxB,IAA6BqB,MAAM,IAAIpB,YAA1C,EAAuD;AACnD,0BACI;AACA,QAAA,SAAS,EAAEF,WAAW,IAAIsB,MAAf,GAAwB,YAAxB,GAAsC,YADjD;AAGA,QAAA,EAAE,EAAEA,MAHJ;AAIA,QAAA,OAAO,EAAEzB,KAAK,CAAC0B,UAJf;AAAA;AAAA,SAEKD,MAFL;AAAA;AAAA;AAAA;AAAA,cADJ;AAUH,KAXD,MAWO;AACH,aAAO,IAAP;AACH;AACJ,GAfyB,CAA1B;AAiBA,sBACQ;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,eACKR,cAAc,CAACjB,KAAK,CAAC2B,eAAP,CADnB,eAEA;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA,8BACI;AAAK,QAAA,KAAK,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEpB,WAAlC;AAAgD,QAAA,OAAO,EAAC,WAAxD;AAAqE,QAAA,IAAI,EAAC,MAA1E;AAAkF,QAAA,MAAM,EAAC,cAAzF;AAAyG,wBAAa,GAAtH;AAA2H,0BAAe,OAA1I;AAAmJ,2BAAgB,OAAnK;AAAA,gCACI;AAAQ,UAAA,EAAE,EAAC,IAAX;AAAgB,UAAA,EAAE,EAAC,IAAnB;AAAwB,UAAA,CAAC,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAU,UAAA,MAAM,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAM,UAAA,EAAE,EAAC,IAAT;AAAc,UAAA,EAAE,EAAC,IAAjB;AAAsB,UAAA,EAAE,EAAC,MAAzB;AAAgC,UAAA,EAAE,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAMKiB,iBANL,eAOI;AAAK,QAAA,KAAK,EAAC,SAAX;AAAqB,QAAA,OAAO,EAAEhB,OAA9B;AAAwC,QAAA,OAAO,EAAC,WAAhD;AAA6D,QAAA,IAAI,EAAC,MAAlE;AAA0E,QAAA,MAAM,EAAC,cAAjF;AAAiG,wBAAa,GAA9G;AAAmH,0BAAe,OAAlI;AAA2I,2BAAgB,OAA3J;AAAA,gCACI;AAAQ,UAAA,EAAE,EAAC,IAAX;AAAgB,UAAA,EAAE,EAAC,IAAnB;AAAwB,UAAA,CAAC,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAU,UAAA,MAAM,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAM,UAAA,EAAE,EAAC,GAAT;AAAa,UAAA,EAAE,EAAC,IAAhB;AAAqB,UAAA,EAAE,EAAC,MAAxB;AAA+B,UAAA,EAAE,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AAkBH;;GAxFuBT,W;;KAAAA,W","sourcesContent":["import React, { useState } from 'react'\nimport './catalogPage.css'\n\nexport default function CatalogPage(props) {\n\n    console.log(props.currentPage)\n\n    const maxPageLimit = 3\n\n    const minPageLimit = 1\n\n    const [currentPage, setCurrentPage] = useState(props.currentPage)\n\n    const previousBtn = () => {\n        if(currentPage - 1 <  minPageLimit){\n            setCurrentPage(minPageLimit)\n        } else {\n            setCurrentPage(currentPage - 1)\n        }\n    }\n\n    const nextBtn = () => {\n        if(currentPage + 1 > maxPageLimit){\n            setCurrentPage(minPageLimit)\n        } else {\n            setCurrentPage(currentPage + 1)\n        }\n    }\n\n    const pages = []\n\n    for(let i = 1; i <= Math.ceil(props.products.length / props.productsPerPage); ++i) {\n        pages.push(i)\n    }\n\n    const renderProducts = product => { // renderiza todos os cards dos produtos na view\n        return(\n            <ul className=\"itemsCatalog\">\n                {\n                    product.map((product, index) => {\n                        return (\n                            <li \n                            className=\"isolatedItems\"\n                            key={index}\n                            onClick={props.openCard}\n                            >\n                                <h2>{product.name}</h2>\n                                <img src={product.image} alt={product.name}/>\n                            </li>\n                        )\n                    } )\n                }  \n            </ul>\n        )\n    }\n\n    const renderPageNumbers = pages.map(number => { // renderiza o layout de mudança de página e suas animações\n        if(number < maxPageLimit + 1 && number >= minPageLimit){\n            return (\n                <li\n                className={currentPage == number ? \"activePage\": \"disabePage\"}\n                key={number} \n                id={number}\n                onClick={props.changePage}\n                >\n                .\n                </li>\n            )\n        } else {\n            return null\n        }\n    })\n   \n    return (\n            <div className=\"itemsContainer\">\n                {renderProducts(props.currentProducts)}\n            <ul className=\"paginateContainer\">\n                <svg class=\"previousBtn\" onClick={previousBtn}  viewBox=\"0 0 24 24\"  fill=\"none\"  stroke=\"currentColor\"  stroke-width=\"2\"  stroke-linecap=\"round\"  stroke-linejoin=\"round\">  \n                    <circle cx=\"12\" cy=\"12\" r=\"10\" />  \n                    <polyline points=\"12 8 8 12 12 16\" />  \n                    <line x1=\"16\" y1=\"12\" x2=\"10.5\" y2=\"12\" />\n                </svg>\n                {renderPageNumbers}\n                <svg class=\"nextBtn\" onClick={nextBtn}  viewBox=\"0 0 24 24\"  fill=\"none\"  stroke=\"currentColor\"  stroke-width=\"2\"  stroke-linecap=\"round\"  stroke-linejoin=\"round\">  \n                    <circle cx=\"12\" cy=\"12\" r=\"10\" />  \n                    <polyline points=\"12 16 16 12 12 8\" />  \n                    <line x1=\"8\" y1=\"12\" x2=\"13.5\" y2=\"12\" />\n                </svg>\n            </ul>\n            </div>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}