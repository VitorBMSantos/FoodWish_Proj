{"ast":null,"code":"var _jsxFileName = \"/Users/vitorsantos/Galileu/Projeto_Front_End/vs-foodwish-proj2022/src/ReusableComponents/CatalogComp/CatalogPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './catalogPage.css';\nimport Modal from '../modalComp/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CatalogPage(props) {\n  _s();\n\n  console.log(props.products[0].id);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [modalFirstState, setModaFirstlState] = useState(\"modalContainer1\");\n  const [modalSecondState] = useState(\"modalContainer\");\n  const productsPerPage = 6;\n  const maxPageLimit = 3;\n  const minPageLimit = 1;\n\n  const changePage = page => {\n    // identifica a página em que o utilizador clicou\n    setCurrentPage(page.target.id);\n  };\n\n  const previousBtn = () => {\n    if (currentPage - 1 < minPageLimit) {\n      setCurrentPage(minPageLimit);\n    } else {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n\n  const nextBtn = () => {\n    if (currentPage + 1 > maxPageLimit) {\n      setCurrentPage(minPageLimit);\n    } else {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n\n  const pages = [];\n\n  for (let i = 1; i <= Math.ceil(props.products.length / productsPerPage); ++i) {\n    pages.push(i);\n  }\n\n  const indexlastProduct = currentPage * productsPerPage;\n  const indexFirstProduct = indexlastProduct - productsPerPage;\n  const currentMeals = props.products.slice(indexFirstProduct, indexlastProduct);\n  let [productId, setProductId] = useState(\"mixed eggs\"); // Como alterar o state de forma que abra\n\n  console.log(productId);\n  const currentProduct = currentMeals.filter(product => product.name == productId);\n\n  const openProduct = event => {\n    setModaFirstlState(modalSecondState);\n    setProductId(event.target);\n  };\n\n  const closeProduct = () => {\n    setModaFirstlState(\"modalContainer1\");\n  };\n\n  const renderProducts = product => {\n    // renderiza todos os cards dos produtos na view\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"itemsCatalog\",\n      children: product.map(product => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"isolatedItems\",\n          id: product.id,\n          onClick: openProduct,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: product.image,\n            alt: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 33\n          }, this)]\n        }, product.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  };\n\n  const renderPageNumbers = pages.map(number => {\n    // renderiza o layout de mudança de página e suas animações\n    if (number < maxPageLimit + 1 && number >= minPageLimit) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: currentPage == number ? \"activePage\" : \"disabePage\",\n        id: number,\n        onClick: changePage,\n        children: \".\"\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this);\n    } else {\n      return null;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"itemsContainer\",\n    children: [renderProducts(currentMeals), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"paginateContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        class: \"previousBtn\",\n        onClick: previousBtn,\n        viewBox: \"0 0 24 24\",\n        fill: \"none\",\n        stroke: \"currentColor\",\n        \"stroke-width\": \"2\",\n        \"stroke-linecap\": \"round\",\n        \"stroke-linejoin\": \"round\",\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"12\",\n          cy: \"12\",\n          r: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n          points: \"12 8 8 12 12 16\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: \"16\",\n          y1: \"12\",\n          x2: \"10.5\",\n          y2: \"12\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), renderPageNumbers, /*#__PURE__*/_jsxDEV(\"svg\", {\n        class: \"nextBtn\",\n        onClick: nextBtn,\n        viewBox: \"0 0 24 24\",\n        fill: \"none\",\n        stroke: \"currentColor\",\n        \"stroke-width\": \"2\",\n        \"stroke-linecap\": \"round\",\n        \"stroke-linejoin\": \"round\",\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"12\",\n          cy: \"12\",\n          r: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n          points: \"12 16 16 12 12 8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: \"8\",\n          y1: \"12\",\n          x2: \"13.5\",\n          y2: \"12\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), currentProduct.map(product => /*#__PURE__*/_jsxDEV(Modal, {\n      id: product.id,\n      name: product.name,\n      image: product.image,\n      meal: product.meal,\n      description: product.description,\n      extras: product.extras,\n      price: product.price,\n      stock: product.stock,\n      hide: modalFirstState,\n      closeProduct: closeProduct\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 13\n  }, this);\n}\n\n_s(CatalogPage, \"PXeJ1ZMAAcLqAj9fUX7ElTO8L50=\");\n\n_c = CatalogPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CatalogPage\");","map":{"version":3,"sources":["/Users/vitorsantos/Galileu/Projeto_Front_End/vs-foodwish-proj2022/src/ReusableComponents/CatalogComp/CatalogPage.jsx"],"names":["React","useState","Modal","CatalogPage","props","console","log","products","id","currentPage","setCurrentPage","modalFirstState","setModaFirstlState","modalSecondState","productsPerPage","maxPageLimit","minPageLimit","changePage","page","target","previousBtn","nextBtn","pages","i","Math","ceil","length","push","indexlastProduct","indexFirstProduct","currentMeals","slice","productId","setProductId","currentProduct","filter","product","name","openProduct","event","closeProduct","renderProducts","map","image","renderPageNumbers","number","meal","description","extras","price","stock"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport './catalogPage.css'\nimport Modal from '../modalComp/Modal'\n\nexport default function CatalogPage(props) {\n\n    console.log(props.products[0].id)\n\n    const [currentPage, setCurrentPage] = useState(1)\n\n    const [modalFirstState, setModaFirstlState] = useState(\"modalContainer1\") \n\n    const [modalSecondState] = useState(\"modalContainer\")\n\n    const productsPerPage = 6\n\n    const maxPageLimit = 3\n\n    const minPageLimit = 1\n\n    const changePage = (page) => { // identifica a página em que o utilizador clicou\n        setCurrentPage(page.target.id)\n    } \n\n    const previousBtn = () => {\n        if(currentPage - 1 <  minPageLimit){\n            setCurrentPage(minPageLimit)\n        } else {\n            setCurrentPage(currentPage - 1)\n        }\n    }\n\n    const nextBtn = () => {\n        if(currentPage + 1 > maxPageLimit){\n            setCurrentPage(minPageLimit)\n        } else {\n            setCurrentPage(currentPage + 1)\n        }\n    }\n\n    const pages = []\n\n    for(let i = 1; i <= Math.ceil(props.products.length / productsPerPage); ++i) {\n        pages.push(i)\n    }\n\n    const indexlastProduct = currentPage * productsPerPage \n\n    const indexFirstProduct = indexlastProduct - productsPerPage\n\n    const currentMeals = props.products.slice(indexFirstProduct, indexlastProduct)\n\n   let [productId, setProductId] = useState(\"mixed eggs\") // Como alterar o state de forma que abra\n\n    console.log(productId)\n\n    const currentProduct = currentMeals.filter((product) => product.name == productId)\n\n    const openProduct = (event) => {\n        setModaFirstlState(modalSecondState)\n        setProductId(event.target)\n    }\n\n    const closeProduct = () => {\n        setModaFirstlState(\"modalContainer1\")\n    }\n\n    const renderProducts = product => { // renderiza todos os cards dos produtos na view\n        return(\n            <ul className=\"itemsCatalog\">\n                {\n                    product.map((product) => {\n                        return (\n                            <li \n                            className=\"isolatedItems\"\n                            key={product.id}\n                            id={product.id}\n                            onClick={openProduct}\n                            >\n                                <h2>{product.name}</h2>\n                                <img src={product.image} alt={product.name}/>\n                            </li>\n                        )\n                    } )\n                }  \n            </ul>\n        )\n    }\n\n    const renderPageNumbers = pages.map(number => { // renderiza o layout de mudança de página e suas animações\n        if(number < maxPageLimit + 1 && number >= minPageLimit){\n            return (\n                <li\n                className={currentPage == number ? \"activePage\": \"disabePage\"}\n                key={number} \n                id={number}\n                onClick={changePage}\n                >\n                .\n                </li>\n            )\n        } else {\n            return null\n        }\n    })\n   \n    return (\n            <div className=\"itemsContainer\">\n                {renderProducts(currentMeals)}\n            <ul className=\"paginateContainer\">\n                <svg class=\"previousBtn\" onClick={previousBtn}  viewBox=\"0 0 24 24\"  fill=\"none\"  stroke=\"currentColor\"  stroke-width=\"2\"  stroke-linecap=\"round\"  stroke-linejoin=\"round\">  \n                    <circle cx=\"12\" cy=\"12\" r=\"10\" />  \n                    <polyline points=\"12 8 8 12 12 16\" />  \n                    <line x1=\"16\" y1=\"12\" x2=\"10.5\" y2=\"12\" />\n                </svg>\n                {renderPageNumbers}\n                <svg class=\"nextBtn\" onClick={nextBtn}  viewBox=\"0 0 24 24\"  fill=\"none\"  stroke=\"currentColor\"  stroke-width=\"2\"  stroke-linecap=\"round\"  stroke-linejoin=\"round\">  \n                    <circle cx=\"12\" cy=\"12\" r=\"10\" />  \n                    <polyline points=\"12 16 16 12 12 8\" />  \n                    <line x1=\"8\" y1=\"12\" x2=\"13.5\" y2=\"12\" />\n                </svg>\n            </ul>\n                 {\n                currentProduct.map(product => \n                    <Modal \n                        id={product.id}\n                        name={product.name}\n                        image={product.image}\n                        meal={product.meal}\n                        description={product.description}\n                        extras={product.extras}\n                        price={product.price}\n                        stock={product.stock}\n                        hide={modalFirstState}\n                        closeProduct={closeProduct}\n                    />\n                ) \n            }\n            </div>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}