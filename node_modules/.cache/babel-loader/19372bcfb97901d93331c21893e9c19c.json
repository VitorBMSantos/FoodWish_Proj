{"ast":null,"code":"var _jsxFileName = \"/Users/vitorsantos/Galileu/Projeto_Front_End/vs-foodwish-proj2022/src/ReusableComponents/CatalogComp/CatalogPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './catalogPage.css';\nimport Modal from '../modalComp/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CatalogPage(props) {\n  _s();\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [modalFirstState, setModaFirstlState] = useState(\"modalContainer1\");\n  const [modalSecondState] = useState(\"modalContainer\");\n  const productsPerPage = 6;\n  const maxPageLimit = 3;\n  const minPageLimit = 1;\n\n  const changePage = page => {\n    // identifica a página em que o utilizador clicou\n    setCurrentPage(page.target.id);\n  };\n\n  const previousBtn = () => {\n    if (currentPage - 1 < minPageLimit) {\n      setCurrentPage(minPageLimit);\n    } else {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n\n  const nextBtn = () => {\n    if (currentPage + 1 > maxPageLimit) {\n      setCurrentPage(minPageLimit);\n    } else {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n\n  const pages = [];\n\n  for (let i = 1; i <= Math.ceil(props.products.length / productsPerPage); ++i) {\n    pages.push(i);\n  }\n\n  const indexlastProduct = currentPage * productsPerPage;\n  const indexFirstProduct = indexlastProduct - productsPerPage;\n  const currentMeals = props.products.slice(indexFirstProduct, indexlastProduct);\n  let [productId, setProductId] = useState(1); // Como alterar o state de forma que abra\n\n  console.log(productId);\n  const currentProduct = currentMeals.filter(product => product.id == productId);\n\n  const openProduct = event => {\n    setModaFirstlState(modalSecondState);\n    console.log(event.target.id);\n  };\n\n  const closeProduct = () => {\n    setModaFirstlState(\"modalContainer1\");\n  };\n\n  const renderProducts = product => {\n    // renderiza todos os cards dos produtos na view\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"itemsCatalog\",\n      children: product.map(product => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"isolatedItems\",\n\n          /* id={product.id} */\n          onClick: openProduct,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: product.image,\n            alt: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 33\n          }, this)]\n        }, product.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  };\n\n  const renderPageNumbers = pages.map(number => {\n    // renderiza o layout de mudança de página e suas animações\n    if (number < maxPageLimit + 1 && number >= minPageLimit) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: currentPage == number ? \"activePage\" : \"disabePage\",\n        id: number,\n        onClick: changePage,\n        children: \".\"\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this);\n    } else {\n      return null;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"itemsContainer\",\n    children: [renderProducts(currentMeals), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"paginateContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        class: \"previousBtn\",\n        onClick: previousBtn,\n        viewBox: \"0 0 24 24\",\n        fill: \"none\",\n        stroke: \"currentColor\",\n        \"stroke-width\": \"2\",\n        \"stroke-linecap\": \"round\",\n        \"stroke-linejoin\": \"round\",\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"12\",\n          cy: \"12\",\n          r: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n          points: \"12 8 8 12 12 16\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: \"16\",\n          y1: \"12\",\n          x2: \"10.5\",\n          y2: \"12\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), renderPageNumbers, /*#__PURE__*/_jsxDEV(\"svg\", {\n        class: \"nextBtn\",\n        onClick: nextBtn,\n        viewBox: \"0 0 24 24\",\n        fill: \"none\",\n        stroke: \"currentColor\",\n        \"stroke-width\": \"2\",\n        \"stroke-linecap\": \"round\",\n        \"stroke-linejoin\": \"round\",\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"12\",\n          cy: \"12\",\n          r: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n          points: \"12 16 16 12 12 8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: \"8\",\n          y1: \"12\",\n          x2: \"13.5\",\n          y2: \"12\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), currentProduct.map(product => /*#__PURE__*/_jsxDEV(Modal, {\n      id: product.id,\n      name: product.name,\n      image: product.image,\n      meal: product.meal,\n      description: product.description,\n      extras: product.extras,\n      price: product.price,\n      stock: product.stock,\n      hide: modalFirstState,\n      closeProduct: closeProduct\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 13\n  }, this);\n}\n\n_s(CatalogPage, \"1lnYRGZly7nPjMgDEt/L8U1Mipg=\");\n\n_c = CatalogPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CatalogPage\");","map":{"version":3,"sources":["/Users/vitorsantos/Galileu/Projeto_Front_End/vs-foodwish-proj2022/src/ReusableComponents/CatalogComp/CatalogPage.jsx"],"names":["React","useState","Modal","CatalogPage","props","currentPage","setCurrentPage","modalFirstState","setModaFirstlState","modalSecondState","productsPerPage","maxPageLimit","minPageLimit","changePage","page","target","id","previousBtn","nextBtn","pages","i","Math","ceil","products","length","push","indexlastProduct","indexFirstProduct","currentMeals","slice","productId","setProductId","console","log","currentProduct","filter","product","openProduct","event","closeProduct","renderProducts","map","name","image","renderPageNumbers","number","meal","description","extras","price","stock"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport './catalogPage.css'\nimport Modal from '../modalComp/Modal'\n\nexport default function CatalogPage(props) {\n\n    const [currentPage, setCurrentPage] = useState(1)\n\n    const [modalFirstState, setModaFirstlState] = useState(\"modalContainer1\") \n\n    const [modalSecondState] = useState(\"modalContainer\")\n\n    const productsPerPage = 6\n\n    const maxPageLimit = 3\n\n    const minPageLimit = 1\n\n    const changePage = (page) => { // identifica a página em que o utilizador clicou\n        setCurrentPage(page.target.id)\n    } \n\n    const previousBtn = () => {\n        if(currentPage - 1 <  minPageLimit){\n            setCurrentPage(minPageLimit)\n        } else {\n            setCurrentPage(currentPage - 1)\n        }\n    }\n\n    const nextBtn = () => {\n        if(currentPage + 1 > maxPageLimit){\n            setCurrentPage(minPageLimit)\n        } else {\n            setCurrentPage(currentPage + 1)\n        }\n    }\n\n    const pages = []\n\n    for(let i = 1; i <= Math.ceil(props.products.length / productsPerPage); ++i) {\n        pages.push(i)\n    }\n\n    const indexlastProduct = currentPage * productsPerPage \n\n    const indexFirstProduct = indexlastProduct - productsPerPage\n\n    const currentMeals = props.products.slice(indexFirstProduct, indexlastProduct)\n\n   let [productId, setProductId] = useState(1) // Como alterar o state de forma que abra\n\n    console.log(productId)\n\n    const currentProduct = currentMeals.filter((product) => product.id == productId)\n\n    const openProduct = (event) => {\n        setModaFirstlState(modalSecondState)\n        console.log(event.target.id)\n    }\n\n    const closeProduct = () => {\n        setModaFirstlState(\"modalContainer1\")\n    }\n\n    const renderProducts = product => { // renderiza todos os cards dos produtos na view\n        return(\n            <ul className=\"itemsCatalog\">\n                {\n                    product.map((product) => {\n                        return (\n                            <li \n                            className=\"isolatedItems\"\n                            key={product.id}\n                            /* id={product.id} */\n                            onClick={openProduct}\n                            >\n                                <h2>{product.name}</h2>\n                                <img src={product.image} alt={product.name}/>\n                            </li>\n                        )\n                    } )\n                }  \n            </ul>\n        )\n    }\n\n    const renderPageNumbers = pages.map(number => { // renderiza o layout de mudança de página e suas animações\n        if(number < maxPageLimit + 1 && number >= minPageLimit){\n            return (\n                <li\n                className={currentPage == number ? \"activePage\": \"disabePage\"}\n                key={number} \n                id={number}\n                onClick={changePage}\n                >\n                .\n                </li>\n            )\n        } else {\n            return null\n        }\n    })\n   \n    return (\n            <div className=\"itemsContainer\">\n                {renderProducts(currentMeals)}\n            <ul className=\"paginateContainer\">\n                <svg class=\"previousBtn\" onClick={previousBtn}  viewBox=\"0 0 24 24\"  fill=\"none\"  stroke=\"currentColor\"  stroke-width=\"2\"  stroke-linecap=\"round\"  stroke-linejoin=\"round\">  \n                    <circle cx=\"12\" cy=\"12\" r=\"10\" />  \n                    <polyline points=\"12 8 8 12 12 16\" />  \n                    <line x1=\"16\" y1=\"12\" x2=\"10.5\" y2=\"12\" />\n                </svg>\n                {renderPageNumbers}\n                <svg class=\"nextBtn\" onClick={nextBtn}  viewBox=\"0 0 24 24\"  fill=\"none\"  stroke=\"currentColor\"  stroke-width=\"2\"  stroke-linecap=\"round\"  stroke-linejoin=\"round\">  \n                    <circle cx=\"12\" cy=\"12\" r=\"10\" />  \n                    <polyline points=\"12 16 16 12 12 8\" />  \n                    <line x1=\"8\" y1=\"12\" x2=\"13.5\" y2=\"12\" />\n                </svg>\n            </ul>\n                 {\n                currentProduct.map(product => \n                    <Modal \n                        id={product.id}\n                        name={product.name}\n                        image={product.image}\n                        meal={product.meal}\n                        description={product.description}\n                        extras={product.extras}\n                        price={product.price}\n                        stock={product.stock}\n                        hide={modalFirstState}\n                        closeProduct={closeProduct}\n                    />\n                ) \n            }\n            </div>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}